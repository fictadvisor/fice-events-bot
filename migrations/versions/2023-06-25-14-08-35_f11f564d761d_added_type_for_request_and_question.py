"""Added type for request and question

Revision ID: f11f564d761d
Revises: 51f501563ece
Create Date: 2023-06-25 14:08:35.454528

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'f11f564d761d'
down_revision = '51f501563ece'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    request_types = sa.Enum('FEEDBACK', 'REGISTER', name='requesttypes')
    request_types.create(op.get_bind(), checkfirst=True)

    op.add_column('questions', sa.Column('type', request_types, nullable=False, server_default='REGISTER'))
    op.alter_column('questions', 'type', server_default=False)

    op.add_column('requests', sa.Column('type', request_types, nullable=False, server_default='REGISTER'))
    op.alter_column('requests', 'type', server_default=False)

    op.drop_constraint('uq_requests_user_id', 'requests', type_='unique')
    op.create_unique_constraint(op.f('uq_requests_user_id'), 'requests', ['user_id', 'event_id', 'type'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    request_types = sa.Enum('FEEDBACK', 'REGISTER', name='requesttypes')
    request_types.drop(op.get_bind(), checkfirst=True)

    op.drop_constraint(op.f('uq_requests_user_id'), 'requests', type_='unique')
    op.create_unique_constraint('uq_requests_user_id', 'requests', ['user_id', 'event_id'])
    op.drop_column('requests', 'type')
    op.drop_column('questions', 'type')
    # ### end Alembic commands ###
